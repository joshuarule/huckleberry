// active link for current page

.is-current-page a {
  .nav-menu & {
    background: $red !important;
    position: absolute;
    width: 100%;
  }
}

.nav-main {
  position: fixed;
  text-align: center;
  z-index: 100;
  width: 100%;

  @include breakpoint($menu-break0) {
    visibility: hidden;
    z-index: 3;
    top: $header-height-mbl;
    height: 100%;
    left: 0;
    right: 0;
    visibility: hidden;
    opacity: 0;

    &:after { // full background for mobile menu
      position: absolute;
      content: '';
      top:    0;
      left:   0;
      right:  0;
      bottom: 0;
      background: rgba($black, .97);
      z-index: -1;
    }

    .js-menu-closed &,
    .js-menu-open & {
      transition: 
        visibility .5s ease-in-out,
        opacity .5s ease-in-out,;
    }

    .js-menu-open & {
      visibility: visible;
      opacity: 1;
    }
  }

  @include breakpoint($menu-break) {
    left: 50%;
    transform: translatex(-50%);
    width: 570px;
    top: 32px; // spaces menu from top
  }

  @include breakpoint(1000px) {
    width: 600px;
  }

  ul {

    @include breakpoint($menu-break) {
      display: inline-block;
      border-bottom: 2px solid $white;
    }
  }

  li {
    &:first-child a {padding-left:  0;}
    &:last-child a  {padding-right: 0;}
    
    @include breakpoint($menu-break0) {
      display: block;
      text-align: center;
      opacity: 0;
      margin-top: -40px;
      transition: margin-top .5s cubic-bezier(.01,.68,.3,.99),
                  opacity .5s cubic-bezier(.6,.16,.97,.77);

      // delay transitions to cascade

      &:nth-child(1) {transition-delay: .3s;}
      &:nth-child(2) {transition-delay: .4s;}
      &:nth-child(3) {transition-delay: .5s;}
      &:nth-child(4) {transition-delay: .6s;}
      &:nth-child(5) {transition-delay: .7s;}

      // Mobile Landscape 

      @include breakpoint(orientation landscape) {
        margin-top: 0px;
        width: 50%;
        float: left;

        a {
          padding: 10px 0;
          font-size: 30px;
        }
      }

      a {
        padding: 20px 0;
        font-size: 40px;
      }

      // animate margin left
      .js-menu-open & {
        margin-top: 0;
        opacity: 1;
      }
    }

    a.is-current-page {
      color: $red;

      &:hover {
        cursor: default;
      }
    }
  }
}

// menu page nav

.nav-menu {
  position: fixed;
  width: 100%;
  padding-top: 45px; // leaves room for active page
  height: 45px;
  margin-bottom: 40px;
  overflow: hidden;
  position: relative;
  display: block;
  // margin-left:  -6.38298%;
  // margin-right: -6.38298%;
  
  // padding-top:   40px;
  // margin-bottom: 20px;

  @include breakpoint($break) {
    position: relative;
    top: auto;
    height: auto;
    width: auto;
    text-align: center;
    padding-top:   60px;
    margin-bottom: 50px;
  }

  .js-menuNav-open & {
    height: auto;
  }

  ul {
    @include breakpoint($break) {
      display: inline-block;
    }
  }

  li {
    display: block;
    @include breakpoint($break) {
      display: inline-block;
      margin-bottom: 20px;
    }
    
  }

  a {
    display: block;
    background: $black;
    @extend %btn;
    padding: 10px 40px 3px 10px;

    @include breakpoint($break){
      padding: 10px 40px 3px 40px;
    }

    &:hover {
      border-color: $white;
      color: $white;
    }
  }
}

.nav-menu .is-current-page {
  position: absolute;
  top: 0;
  width: 100%;

  @include breakpoint($break){
    position: relative;
    top: auto;
    width: auto;
  }

  a {
    position: relative;
    background: $red !important; 
  }

  a:after { // down arrow
    pointer-events: none;
    $size: 10px;
    position: absolute;
    content: '';
    z-index: 1;
    bottom: 16px;
    right: 15px; 
    width: 0;
    height: 0;
    border-left:  $size solid transparent;
    border-right: $size solid transparent;
    border-top:   $size solid $white;
    
    .js-menuNav-open & {
      border-bottom: $size solid $white;
      border-top:    none;
    }

    @include breakpoint($break) {
      $size: 14px;
      bottom: -$size - 2px; // size - border size
      border-left:  $size solid transparent;
      border-right: $size solid transparent;
      border-top:   $size solid $red;
      right: 0;
      left: 50%;
      margin-left: -($size); 

      &:hover {
        border-color: transparent !important;
        cursor: default;
      }
    }
  }
}
